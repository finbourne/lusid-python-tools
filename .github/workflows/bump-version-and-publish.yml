# This job runs the project tests

name: bump-version-and-publish

# Trigger the workflow on push or pull request to master

on:
  push:
    branches: [ master ]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
      
      - name: Install dependancies
        run: |
          pip install bump2version==1.0.0 twine
    
      - name: Bump version of package
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "bumping version"
          git config --global user.email "engineering@finbourne.com"
          git config --global user.name "finbourne-bot-public"

          last_commit_message=$(git log -1 HEAD --pretty=format:%s)

          # Bump the version up
          if [[ "$last_commit_message" == "Bump version"* ]]; then
            echo "Skipping version increment (no commits found)"
          else
            # Find next version
            api_version=$(cat __version__.py | grep __version__ |  awk '{split($0, a, "="); print a[2]}' | tr -d ' "')
            IFS='.' read -a version_split <<< "${api_version}"
            current_patch=${version_split[2]}
            new_patch=$(echo "$current_patch + 1" | tr -d $'\r' | bc)
            new_version="${version_split[0]}.${version_split[1]}.$new_patch"
            echo "Bumping packaging patch version from $api_version to $new_version"

                # Bump the version in project and make commit back to master
            bump2version patch --message "Bump version in Travis CI: {current_version} to {new_version} [skip ci]"
            git push -f https://finbourne-bot-public:${GH_TOKEN}@github.com/finbourne/lusid-python-tools.git HEAD:master
            echo "Commit with incremented version completed"
          fi

      - name: Publish package to PyPi
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}    
        run: |
          bash -e ci_tools/publish.sh "$PYPI_USERNAME" "$PYPI_PASSWORD"
    
