# This job runs the project tests

name: bump-version-and-publish

# Trigger the workflow on push or pull request to master or develop

on:
  push:
    branches: [ master ]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
      
      - name: Install dependancies
        run: |
          pip install bump2version==1.0.0 twine
    
      - name: Bump version of package
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "bumping version"
          git config --global user.email "engineering@finbourne.com"
          git config --global user.name "finbourne-bot-public"
          bash ci_tools/bumpversion.sh
          
      - name: Publish package to PyPi
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}    
        run: |
          bash ci_tools/publish.sh "$PYPI_USERNAME" "$PYPI_PASSWORD"
          
      - name: Get new package version
        run: |
         curl https://raw.githubusercontent.com/finbourne/lusid-python-tools/master/__version__.py | grep __version__ |  awk '{split($0, a, "="); print a[2]}' | tr -d ' "' >> $PYPI_VERSION
          
      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
            username: 'github-actions-tests',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_REPO} version ${process.env.PYPI_VERSION} has been published to PyPi`
            }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: success()
    
